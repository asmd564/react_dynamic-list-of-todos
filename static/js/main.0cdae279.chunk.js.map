{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","memo","todos","userId","selectedTodo","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","onInputChange","onSelectChange","useState","input","setInput","onChange","e","target","value","placeholder","style","pointerEvents","Loader","React","TodoModal","closeModal","user","setUser","isLoaded","setIsLoaded","useEffect","fetchedUser","href","email","name","App","setTodos","load","setLoad","setSelectedTodo","selectValue","setSelectValue","inputValue","setInputValue","visibleTodos","useMemo","filter","toLowerCase","includes","finally","catch","error","Error","openModal","useCallback","onClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cdae279.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  userId: number | null,\n  selectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = memo((\n  {\n    todos,\n    userId,\n    selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          const isSelected = userId === id;\n\n          return (\n            <tr key={id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{id}</td>\n              {\n                !completed\n                  ? <td className=\"is-vcentered\" />\n                  : (\n                    <td className=\"is-vcentered\">\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </td>\n                  )\n              }\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye-slash': isSelected,\n                      'fa-eye': !isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import { useState } from 'react';\n\ntype Props = {\n  onSelectChange: (select:string) => void;\n  onInputChange: (input: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onInputChange,\n  onSelectChange,\n}) => {\n  const [input, setInput] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              onSelectChange(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n            onInputChange(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {input && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setInput('');\n                onInputChange('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { useState, memo, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  closeModal: () => void;\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ closeModal, todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    getUser(todo.userId).then((fetchedUser: User) => {\n      setUser(fetchedUser);\n\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [load, setLoad] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectValue, setSelectValue] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n\n  let visibleTodos = useMemo(() => {\n    return [...todos];\n  }, [todos]);\n\n  /* eslint-disable max-len */\n  if (inputValue) {\n    visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(inputValue));\n  }\n\n  if (selectValue === 'active') {\n    visibleTodos = visibleTodos.filter(todo => !todo.completed);\n  }\n\n  if (selectValue === 'completed') {\n    visibleTodos = visibleTodos.filter(todo => todo.completed);\n  }\n\n  useEffect(\n    () => {\n      getTodos()\n        .then(setTodos)\n        .finally(() => setLoad(false))\n        .catch(error => {\n          throw new Error(`${error} Error`);\n        });\n    },\n    [],\n  );\n\n  const openModal = useCallback((todo: Todo) => (\n    setSelectedTodo(todo)), []);\n  const onClose = useCallback(() => setSelectedTodo(null), []);\n  const onSelectChange = useCallback((value: string) => setSelectValue(value), []);\n  const onInputChange = useCallback((input: string) => {\n    setInputValue(input.toLowerCase());\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectChange={onSelectChange}\n                onInputChange={onInputChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              { load ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  userId={selectedTodo?.id || null}\n                  selectedTodo={openModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeModal={onClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}